# Cron job configuration example for Useme automation
# Copy these entries to your crontab (use 'crontab -e' to edit)

# Run scraper every 3 hours
0 */3 * * * cd /path/to/useme_bot && /usr/bin/python3 queue_worker.py --scrape >> /path/to/useme_bot/cron.log 2>&1

# Generate proposals every 2 hours
0 */2 * * * cd /path/to/useme_bot && /usr/bin/python3 queue_worker.py --proposals --min-relevance 5 --limit 10 >> /path/to/useme_bot/cron.log 2>&1

# Post proposals every 4 hours for proposals with relevance >= 6
0 */4 * * * cd /path/to/useme_bot && /usr/bin/python3 reset_and_process.py --post-proposals --min-relevance 6 >> /path/to/useme_bot/cron.log 2>&1

# Check for follow-up emails every hour
# This will process proposals that were sent an hour ago and have relevance >= 7
0 * * * * cd /path/to/useme_bot && /usr/bin/python3 queue_worker.py --followup-emails --followup-min-relevance 7 >> /path/to/useme_bot/cron.log 2>&1

# You can also run the combined worker once per hour to handle all tasks
# 0 * * * * cd /path/to/useme_bot && /usr/bin/python3 queue_worker.py >> /path/to/useme_bot/cron.log 2>&1 